{"ast":null,"code":"var _jsxFileName = \"/Users/tommytomaye/Desktop/todo-app/src/todo-list.js\";\nimport React, { Component } from 'react';\nimport ToDoItem from './todo-item.js';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ToDoList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itemDescription: '',\n      dueDate: new Date(),\n      filterValue: '',\n      toDoItems: []\n    };\n    this.handleDateChange = this.handleDateChange.bind(this); // this.handleItemChange = this.handleItemChange.bind(this);\n\n    this.submitNotes = this.submitNotes.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.AddNewItem = this.AddNewItem.bind(this);\n  }\n\n  componentDidMount() {\n    // At this point we will assume that this array is a part of an API response \n    // Let's imagine that we are making a GET call here. \n    const items = [{\n      id: 0,\n      description: 'Wash the car',\n      dueDate: new Date()\n    }, {\n      id: 1,\n      description: 'Clean the house',\n      dueDate: new Date()\n    }, {\n      id: 2,\n      description: 'Cook some foods',\n      dueDate: new Date()\n    }];\n    this.setState({\n      toDoItems: items\n    });\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      dueDate: date\n    });\n  }\n\n  handleItemChange(event) {\n    this.setState({\n      itemDescription: event.target.value\n    });\n  }\n\n  AddNewItem() {\n    const newToDOItem = {\n      id: this.state.toDoItems.length,\n      description: this.state.itemDescription,\n      dueDate: this.state.dueDate\n    };\n    const toDoItems = this.state.toDoItems;\n    toDoItems.push(newToDOItem);\n    this.setState({\n      toDoItems: toDoItems\n    });\n    this.setState({\n      itemDescription: ''\n    });\n  }\n\n  handleDelete(id) {\n    let todoItems = this.state.toDoItems.filter(item => item.id !== id);\n    this.setState({\n      toDoItems: todoItems\n    });\n  }\n\n  handleChange(item) {\n    let todoItems = this.state.toDoItems;\n\n    if (item.description) {\n      todoItems[item.index].description = item.description;\n    } else {\n      todoItems[item.index].dueDate = item.dueDate;\n    }\n\n    this.setState({\n      toDoItems: todoItems\n    });\n  }\n\n  handleFilter(event) {\n    this.setState({\n      filterValue: event.target.value\n    });\n  }\n\n  submitNotes() {\n    // Since we don't have a real API to make a POST call here we will store the data in local storage. \n    localStorage.setItem('toDoList', JSON.stringify(this.state.toDoItems));\n  }\n\n  render() {\n    const toDoItems = this.state.toDoItems;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container p-4 d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => this.setState({\n            itemDescription: event.target.value\n          }),\n          value: this.state.itemDescription,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: this.state.dueDate,\n          onChange: this.handleDateChange,\n          minDate: new Date(),\n          name: \"dueDate\",\n          dateFormat: \"MM/dd/yyyy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.AddNewItem,\n          className: \"btn btn-primary add-btn\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Filter items by description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-8\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.handleFilter,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-t-3\",\n          children: toDoItems.filter(item => item.description.toLowerCase().includes(this.state.filterValue.toLowerCase())).map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(ToDoItem, {\n              item: item,\n              onChange: this.handleChange,\n              onClick: this.handleDelete\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.submitNotes,\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/tommytomaye/Desktop/todo-app/src/todo-list.js"],"names":["React","Component","ToDoItem","DatePicker","ToDoList","constructor","state","itemDescription","dueDate","Date","filterValue","toDoItems","handleDateChange","bind","submitNotes","handleChange","handleDelete","handleFilter","AddNewItem","componentDidMount","items","id","description","setState","date","handleItemChange","event","target","value","newToDOItem","length","push","todoItems","filter","item","index","localStorage","setItem","JSON","stringify","render","toLowerCase","includes","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ToDoItem from './todo-item.js';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\nclass ToDoList extends Component {\n    constructor() {\n        super()\n        this.state = {\n            itemDescription: '',\n            dueDate: new Date(),\n            filterValue: '',\n            toDoItems: []\n        };\n        this.handleDateChange = this.handleDateChange.bind(this);\n       // this.handleItemChange = this.handleItemChange.bind(this);\n        this.submitNotes = this.submitNotes.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleFilter = this.handleFilter.bind(this);\n        this.AddNewItem = this.AddNewItem.bind(this);\n    }\n\n    componentDidMount() {\n        // At this point we will assume that this array is a part of an API response \n        // Let's imagine that we are making a GET call here. \n        const items = [\n            { id: 0, description: 'Wash the car', dueDate: new Date() },\n            { id: 1, description: 'Clean the house', dueDate: new Date() },\n            { id: 2, description: 'Cook some foods', dueDate: new Date() }]\n        this.setState({\n            toDoItems: items\n        });\n    }\n\n    handleDateChange(date) {\n        this.setState({\n            dueDate: date\n        })\n    }\n\n    handleItemChange(event) {\n        this.setState({\n            itemDescription: event.target.value\n        })\n    }\n\n    AddNewItem() {\n        const newToDOItem = {\n            id: this.state.toDoItems.length,\n            description: this.state.itemDescription,\n            dueDate: this.state.dueDate,\n        };\n        const toDoItems = this.state.toDoItems;\n        toDoItems.push(newToDOItem);\n        this.setState({\n            toDoItems: toDoItems\n        })\n        this.setState({\n            itemDescription: ''\n        })\n    }\n\n    handleDelete(id) {\n        let todoItems = this.state.toDoItems.filter((item) => item.id !== id);\n        this.setState({ toDoItems: todoItems });\n    }\n\n    handleChange(item) {\n        let todoItems = this.state.toDoItems;\n        if (item.description) {\n            todoItems[item.index].description = item.description;\n        } else {\n            todoItems[item.index].dueDate = item.dueDate;\n        }\n        this.setState({\n            toDoItems: todoItems\n        })\n    }\n\n    handleFilter(event) {\n        this.setState({\n            filterValue: event.target.value\n        })\n    }\n\n    submitNotes() {\n        // Since we don't have a real API to make a POST call here we will store the data in local storage. \n        localStorage.setItem('toDoList', JSON.stringify(this.state.toDoItems));\n    }\n\n    render() {\n        const toDoItems = this.state.toDoItems;\n        return (\n            <>\n                <div className=\"container p-4 d-flex\">\n                    <input type=\"text\"\n                        onChange={(event) => this.setState({itemDescription: event.target.value})}\n                        value={this.state.itemDescription}\n                        className=\"form-control\" />\n                    <DatePicker\n                        selected={this.state.dueDate}\n                        onChange={this.handleDateChange}\n                        minDate={new Date()}\n                        name=\"dueDate\"\n                        dateFormat=\"MM/dd/yyyy\"\n                    />\n                    <button onClick={this.AddNewItem} className=\"btn btn-primary add-btn\">ADD</button>\n                </div>\n                <div className=\"container d-flex\">\n                    <div className='col-4'>\n                        <span>Filter items by description</span>\n                    </div>\n                    <div className='col-8'>\n                        <input type=\"text\"\n                            onChange={this.handleFilter}\n                            className=\"form-control\" />\n                    </div>\n                </div>\n                <div className='container'>\n                    <div className='m-t-3'>\n                        {toDoItems.filter(item => item.description.toLowerCase().includes(this.state.filterValue.toLowerCase())).map((item, index) => {\n                            return <ToDoItem key={index} item={item}\n                                onChange={this.handleChange}\n                                onClick={this.handleDelete} />\n                        })}\n                    </div>\n                </div>\n                <div className='container'>\n                    <button onClick={this.submitNotes} className=\"btn btn-primary\">Submit</button>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}