{"ast":null,"code":"var _jsxFileName = \"/Users/tommytomaye/Desktop/todo-app/src/todo-item.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ToDoItem(props) {\n  _s();\n\n  const [editMode, setEditMode] = useState(false);\n\n  handleDelete = () => {\n    this.props.onClick(this.props.item.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-block\",\n      children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.handleChange,\n            onKeyDown: this.toggleEditMode,\n            value: props.item.description,\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: props.item.dueDate,\n            onChange: this.handleChange,\n            minDate: new Date(),\n            onKeyDown: this.toggleEditMode,\n            name: \"dueDate\",\n            dateFormat: \"MM/dd/yyyy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: props.item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Due Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: props.item.dueDate.toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => setEditMode(!editMode),\n      className: \"fa fa-edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: handleDelete,\n      className: \"fa fa-trash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n} // class ToDoItem extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       editMode: false,\n//     };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleDelete = this.handleDelete.bind(this);\n//     this.toggleEditMode = this.toggleEditMode.bind(this);\n//   }\n//   toggleEditMode(event) {\n//     if (event.keyCode == 13) {\n//       this.setState({\n//         editMode: false\n//       })\n//     }\n//   }\n//   handleChange(event) {\n//     if (event.target) {\n//       this.props.onChange({ value: event.target.value, index: this.props.item.id });\n//     } else {\n//       this.props.onChange({ value: event, index: this.props.item.id });\n//     }\n//   }\n//   handleDelete() {\n//     this.props.onClick(this.props.item.id);\n//   }\n//   render() {\n//     return (\n//       <div className=\"item-wrapper\">\n//         <div className=\"d-block\">\n//           {this.state.editMode ?\n//             <>\n//               <div className=\"col-12 d-flex\">\n//                 <input type=\"text\"\n//                   onChange={this.handleChange}\n//                   onKeyDown={this.toggleEditMode}\n//                   value={this.props.item.description}\n//                   className=\"form-control\" />\n//                 <DatePicker\n//                   selected={this.props.item.dueDate}\n//                   onChange={this.handleChange}\n//                   minDate={new Date()}\n//                   onKeyDown={this.toggleEditMode}\n//                   name=\"dueDate\"\n//                   dateFormat=\"MM/dd/yyyy\" />\n//               </div>\n//             </>\n//             : <>\n//               <div><strong>Description:</strong><span>{this.props.item.description}</span></div>\n//               <div><strong>Due Date:</strong><span>{this.props.item.dueDate.toLocaleDateString()}</span></div>\n//             </>\n//           }\n//         </div>\n//         <span onClick={() => this.setState({ editMode: !this.state.editMode })} className=\"fa fa-edit\"></span>\n//         <span onClick={this.handleDelete} className=\"fa fa-trash\"></span>\n//       </div>\n//     );\n//   }\n// }\n\n\n_s(ToDoItem, \"rVR9Tx2gSsa7LZkJIG7mlWuXVu0=\");\n\n_c = ToDoItem;\nexport default ToDoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoItem\");","map":{"version":3,"sources":["/Users/tommytomaye/Desktop/todo-app/src/todo-item.js"],"names":["React","Component","useState","DatePicker","ToDoItem","props","editMode","setEditMode","handleDelete","onClick","item","id","handleChange","toggleEditMode","description","dueDate","Date","toLocaleDateString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,4CAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;;AAEAM,EAAAA,YAAY,GAAG,MAAM;AACnB,SAAKH,KAAL,CAAWI,OAAX,CAAmB,KAAKJ,KAAL,CAAWK,IAAX,CAAgBC,EAAnC;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGL,QAAQ,gBACP;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AAAO,YAAA,IAAI,EAAC,MAAZ;AACE,YAAA,QAAQ,EAAE,KAAKM,YADjB;AAEE,YAAA,SAAS,EAAE,KAAKC,cAFlB;AAGE,YAAA,KAAK,EAAER,KAAK,CAACK,IAAN,CAAWI,WAHpB;AAIE,YAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,UAAD;AACE,YAAA,QAAQ,EAAET,KAAK,CAACK,IAAN,CAAWK,OADvB;AAEE,YAAA,QAAQ,EAAE,KAAKH,YAFjB;AAGE,YAAA,OAAO,EAAE,IAAII,IAAJ,EAHX;AAIE,YAAA,SAAS,EAAE,KAAKH,cAJlB;AAKE,YAAA,IAAI,EAAC,SALP;AAME,YAAA,UAAU,EAAC;AANb;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADO,gBAiBL;AAAA,gCACA;AAAA,kCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,eAAkC;AAAA,sBAAOR,KAAK,CAACK,IAAN,CAAWI;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,kCAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,eAA+B;AAAA,sBAAOT,KAAK,CAACK,IAAN,CAAWK,OAAX,CAAmBE,kBAAnB;AAAP;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAlBN;AAAA;AAAA;AAAA;AAAA,YADF,eAyBE;AAAM,MAAA,OAAO,EAAE,MAAMV,WAAW,CAAC,CAACD,QAAF,CAAhC;AAA6C,MAAA,SAAS,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAzBF,eA0BE;AAAM,MAAA,OAAO,EAAEE,YAAf;AAA6B,MAAA,SAAS,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GArGSJ,Q;;KAAAA,Q;AAuGT,eAAeA,QAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\n\nfunction ToDoItem(props) {\n  const [editMode, setEditMode] = useState(false);\n\n  handleDelete = () => {\n    this.props.onClick(this.props.item.id);\n  }\n  return (\n    <div className=\"item-wrapper\">\n      <div className=\"d-block\">\n        {editMode ?\n          <>\n            <div className=\"col-12 d-flex\">\n              <input type=\"text\"\n                onChange={this.handleChange}\n                onKeyDown={this.toggleEditMode}\n                value={props.item.description}\n                className=\"form-control\" />\n              <DatePicker\n                selected={props.item.dueDate}\n                onChange={this.handleChange}\n                minDate={new Date()}\n                onKeyDown={this.toggleEditMode}\n                name=\"dueDate\"\n                dateFormat=\"MM/dd/yyyy\" />\n            </div>\n          </>\n          : <>\n            <div><strong>Description:</strong><span>{props.item.description}</span></div>\n            <div><strong>Due Date:</strong><span>{props.item.dueDate.toLocaleDateString()}</span></div>\n          </>\n        }\n      </div>\n      <span onClick={() => setEditMode(!editMode)} className=\"fa fa-edit\"></span>\n      <span onClick={handleDelete} className=\"fa fa-trash\"></span>\n    </div>\n  );\n}\n// class ToDoItem extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       editMode: false,\n//     };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleDelete = this.handleDelete.bind(this);\n//     this.toggleEditMode = this.toggleEditMode.bind(this);\n//   }\n\n//   toggleEditMode(event) {\n//     if (event.keyCode == 13) {\n//       this.setState({\n//         editMode: false\n//       })\n//     }\n//   }\n\n//   handleChange(event) {\n//     if (event.target) {\n//       this.props.onChange({ value: event.target.value, index: this.props.item.id });\n//     } else {\n//       this.props.onChange({ value: event, index: this.props.item.id });\n//     }\n//   }\n\n//   handleDelete() {\n//     this.props.onClick(this.props.item.id);\n//   }\n\n//   render() {\n//     return (\n\n//       <div className=\"item-wrapper\">\n//         <div className=\"d-block\">\n//           {this.state.editMode ?\n//             <>\n//               <div className=\"col-12 d-flex\">\n//                 <input type=\"text\"\n//                   onChange={this.handleChange}\n//                   onKeyDown={this.toggleEditMode}\n//                   value={this.props.item.description}\n//                   className=\"form-control\" />\n//                 <DatePicker\n//                   selected={this.props.item.dueDate}\n//                   onChange={this.handleChange}\n//                   minDate={new Date()}\n//                   onKeyDown={this.toggleEditMode}\n//                   name=\"dueDate\"\n//                   dateFormat=\"MM/dd/yyyy\" />\n//               </div>\n//             </>\n//             : <>\n//               <div><strong>Description:</strong><span>{this.props.item.description}</span></div>\n//               <div><strong>Due Date:</strong><span>{this.props.item.dueDate.toLocaleDateString()}</span></div>\n//             </>\n//           }\n//         </div>\n//         <span onClick={() => this.setState({ editMode: !this.state.editMode })} className=\"fa fa-edit\"></span>\n//         <span onClick={this.handleDelete} className=\"fa fa-trash\"></span>\n//       </div>\n//     );\n//   }\n// }\n\nexport default ToDoItem;"]},"metadata":{},"sourceType":"module"}