{"ast":null,"code":"var _jsxFileName = \"/Users/tommytomaye/Desktop/todo-app/src/todo-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ToDoItem from './todo-item.js';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = () => {\n  _s();\n\n  const [itemDescription, setItemDescription] = useState('');\n  const [dueDate, setDueDate] = useState(new Date());\n  const [filterValue, setFilterValue] = useState('');\n  const [toDoItems, setToDoItems] = useState([]);\n  useEffect(() => {\n    // At this point we will assume that this array is a part of an API response \n    // Let's imagine that we are making a GET call here. \n    const items = [{\n      id: 0,\n      description: 'Wash the car',\n      dueDate: new Date()\n    }, {\n      id: 1,\n      description: 'Clean the house',\n      dueDate: new Date()\n    }, {\n      id: 2,\n      description: 'Cook some foods',\n      dueDate: new Date()\n    }];\n    setToDoItems(items);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"GG\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n}; // import React, { Component } from 'react';\n// import ToDoItem from './todo-item.js';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import DatePicker from 'react-datepicker';\n// class ToDoList extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             itemDescription: '',\n//             dueDate: new Date(),\n//             filterValue: '',\n//             toDoItems: []\n//         };\n//         this.submitNotes = this.submitNotes.bind(this);\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleDelete = this.handleDelete.bind(this);\n//         this.AddNewItem = this.AddNewItem.bind(this);\n//     }\n//     componentDidMount() {\n//         // At this point we will assume that this array is a part of an API response \n//         // Let's imagine that we are making a GET call here. \n// const items = [\n//     { id: 0, description: 'Wash the car', dueDate: new Date() },\n//     { id: 1, description: 'Clean the house', dueDate: new Date() },\n//     { id: 2, description: 'Cook some foods', dueDate: new Date() }]\n//         this.setState({\n//             toDoItems: items\n//         });\n//     }\n//     AddNewItem() {\n//         const newToDOItem = {\n//             id: this.state.toDoItems.length,\n//             description: this.state.itemDescription,\n//             dueDate: this.state.dueDate,\n//         };\n//         const toDoItems = this.state.toDoItems;\n//         toDoItems.push(newToDOItem);\n//         this.setState({\n//             toDoItems: toDoItems\n//         })\n//         this.setState({\n//             itemDescription: ''\n//         })\n//     }\n//     handleDelete(id) {\n//         let todoItems = this.state.toDoItems.filter((item) => item.id !== id);\n//         this.setState({ toDoItems: todoItems });\n//     }\n//     handleChange(item) {\n//         let todoItems = this.state.toDoItems;\n//         todoItems[item.index].description = item.description || ''; \n//         if (item.dueDate) {\n//             todoItems[item.index].dueDate = item.dueDate;\n//         } \n//         this.setState({\n//             toDoItems: todoItems\n//         })\n//     }\n//     submitNotes() {\n//         // Since we don't have a real API to make a POST call here we will store the data in local storage. \n//         localStorage.setItem('toDoList', JSON.stringify(this.state.toDoItems));\n//     }\n//     render() {\n//         const toDoItems = this.state.toDoItems;\n//         return (\n//             <>\n//                 <div className=\"container p-4 d-flex\">\n//                     <input type=\"text\"\n//                         onChange={(event) => this.setState({itemDescription: event.target.value})}\n//                         value={this.state.itemDescription}\n//                         className=\"form-control\" />\n//                     <DatePicker\n//                         selected={this.state.dueDate}\n//                         onChange={(date) => this.setState({dueDate: date})}\n//                         minDate={new Date()}\n//                         name=\"dueDate\"\n//                         dateFormat=\"MM/dd/yyyy\"\n//                     />\n//                     <button onClick={this.AddNewItem} className=\"btn btn-primary add-btn\">ADD</button>\n//                 </div>\n//                 <div className=\"container d-flex\">\n//                     <div className='col-4'>\n//                         <span>Filter items by description</span>\n//                     </div>\n//                     <div className='col-8'>\n//                         <input type=\"text\"\n//                             onChange={(event) => this.setState({filterValue: event.target.value})}\n//                             className=\"form-control\" />\n//                     </div>\n//                 </div>\n//                 <div className='container'>\n//                     <div className='m-t-3'>\n//                         {toDoItems.filter(item => item.description.toLowerCase().includes(this.state.filterValue.toLowerCase())).map((item, index) => {\n//                             return <ToDoItem key={index} item={item}\n//                                 onChange={this.handleChange}\n//                                 onClick={this.handleDelete} />\n//                         })}\n//                     </div>\n//                 </div>\n//                 <div className='container'>\n//                     <button onClick={this.submitNotes} className=\"btn btn-primary\">Submit</button>\n//                 </div>\n//             </>\n//         )\n//     }\n// }\n\n\n_s(ToDoList, \"DHG6qCEci3Tt3VZ8e/mpPAAtFi8=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/tommytomaye/Desktop/todo-app/src/todo-list.js"],"names":["React","useState","useEffect","ToDoItem","DatePicker","ToDoList","itemDescription","setItemDescription","dueDate","setDueDate","Date","filterValue","setFilterValue","toDoItems","setToDoItems","items","id","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,4CAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAAtC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb;AACD;AACA,UAAMa,KAAK,GAAG,CACZ;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,cAAtB;AAAsCT,MAAAA,OAAO,EAAE,IAAIE,IAAJ;AAA/C,KADY,EAEZ;AAAEM,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,iBAAtB;AAAyCT,MAAAA,OAAO,EAAE,IAAIE,IAAJ;AAAlD,KAFY,EAGZ;AAAEM,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,iBAAtB;AAAyCT,MAAAA,OAAO,EAAE,IAAIE,IAAJ;AAAlD,KAHY,CAAd;AAIEI,IAAAA,YAAY,CAACC,KAAD,CAAZ;AAEH,GATQ,EASN,EATM,CAAT;AAUA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAjBD,C,CAkjIMV,Q;;KAAAA,Q;AAmIN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ToDoItem from './todo-item.js';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\nconst ToDoList = () => {\n    const [itemDescription, setItemDescription] = useState('');\n    const [dueDate, setDueDate] = useState(new Date());\n    const [filterValue, setFilterValue] = useState('');\n    const [toDoItems, setToDoItems] = useState([]);\n\n    useEffect(() => {\n       // At this point we will assume that this array is a part of an API response \n      // Let's imagine that we are making a GET call here. \n      const items = [\n        { id: 0, description: 'Wash the car', dueDate: new Date() },\n        { id: 1, description: 'Clean the house', dueDate: new Date() },\n        { id: 2, description: 'Cook some foods', dueDate: new Date() }];\n        setToDoItems(items);\n\n    }, []);\n    return <h1>GG</h1>\n}\n// import React, { Component } from 'react';\n// import ToDoItem from './todo-item.js';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import DatePicker from 'react-datepicker';\n// class ToDoList extends Component {\n//     constructor() {\n//         super()\n//         this.state = {\n//             itemDescription: '',\n//             dueDate: new Date(),\n//             filterValue: '',\n//             toDoItems: []\n//         };\n//         this.submitNotes = this.submitNotes.bind(this);\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleDelete = this.handleDelete.bind(this);\n//         this.AddNewItem = this.AddNewItem.bind(this);\n//     }\n\n//     componentDidMount() {\n//         // At this point we will assume that this array is a part of an API response \n//         // Let's imagine that we are making a GET call here. \n        // const items = [\n        //     { id: 0, description: 'Wash the car', dueDate: new Date() },\n        //     { id: 1, description: 'Clean the house', dueDate: new Date() },\n        //     { id: 2, description: 'Cook some foods', dueDate: new Date() }]\n//         this.setState({\n//             toDoItems: items\n//         });\n//     }\n\n//     AddNewItem() {\n//         const newToDOItem = {\n//             id: this.state.toDoItems.length,\n//             description: this.state.itemDescription,\n//             dueDate: this.state.dueDate,\n//         };\n//         const toDoItems = this.state.toDoItems;\n//         toDoItems.push(newToDOItem);\n//         this.setState({\n//             toDoItems: toDoItems\n//         })\n//         this.setState({\n//             itemDescription: ''\n//         })\n//     }\n\n//     handleDelete(id) {\n//         let todoItems = this.state.toDoItems.filter((item) => item.id !== id);\n//         this.setState({ toDoItems: todoItems });\n//     }\n\n//     handleChange(item) {\n//         let todoItems = this.state.toDoItems;\n//         todoItems[item.index].description = item.description || ''; \n//         if (item.dueDate) {\n//             todoItems[item.index].dueDate = item.dueDate;\n//         } \n//         this.setState({\n//             toDoItems: todoItems\n//         })\n//     }\n\n//     submitNotes() {\n//         // Since we don't have a real API to make a POST call here we will store the data in local storage. \n//         localStorage.setItem('toDoList', JSON.stringify(this.state.toDoItems));\n//     }\n\n//     render() {\n//         const toDoItems = this.state.toDoItems;\n//         return (\n//             <>\n//                 <div className=\"container p-4 d-flex\">\n//                     <input type=\"text\"\n//                         onChange={(event) => this.setState({itemDescription: event.target.value})}\n//                         value={this.state.itemDescription}\n//                         className=\"form-control\" />\n//                     <DatePicker\n//                         selected={this.state.dueDate}\n//                         onChange={(date) => this.setState({dueDate: date})}\n//                         minDate={new Date()}\n//                         name=\"dueDate\"\n//                         dateFormat=\"MM/dd/yyyy\"\n//                     />\n//                     <button onClick={this.AddNewItem} className=\"btn btn-primary add-btn\">ADD</button>\n//                 </div>\n//                 <div className=\"container d-flex\">\n//                     <div className='col-4'>\n//                         <span>Filter items by description</span>\n//                     </div>\n//                     <div className='col-8'>\n//                         <input type=\"text\"\n//                             onChange={(event) => this.setState({filterValue: event.target.value})}\n//                             className=\"form-control\" />\n//                     </div>\n//                 </div>\n//                 <div className='container'>\n//                     <div className='m-t-3'>\n//                         {toDoItems.filter(item => item.description.toLowerCase().includes(this.state.filterValue.toLowerCase())).map((item, index) => {\n//                             return <ToDoItem key={index} item={item}\n//                                 onChange={this.handleChange}\n//                                 onClick={this.handleDelete} />\n//                         })}\n//                     </div>\n//                 </div>\n//                 <div className='container'>\n//                     <button onClick={this.submitNotes} className=\"btn btn-primary\">Submit</button>\n//                 </div>\n//             </>\n//         )\n//     }\n// }\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}