{"ast":null,"code":"var _jsxFileName = \"/Users/tommytomaye/Desktop/todo-app/src/todo-list.js\";\nimport React, { Component, useState } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ToDoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: new Date(),\n      toDoItems: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.AddNewItem = this.AddNewItem.bind(this);\n  }\n\n  componentDidMount() {\n    // At this point we will assume that this array is a part of an API response \n    // Let's imagine that we are making a GET call here. \n    const items = [{\n      id: 0,\n      description: 'Wash the car',\n      dueDate: new Date()\n    }, {\n      id: 1,\n      description: 'Clean the house',\n      dueDate: new Date()\n    }, {\n      id: 2,\n      description: 'Cook some foods',\n      dueDate: new Date()\n    }];\n    this.setState({\n      toDoItems: items\n    });\n  }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n  AddNewItem() {\n    console.log(this.state.startDate);\n  }\n\n  render() {\n    const toDoItems = this.state.toDoItems;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container p-4 d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: this.state.startDate,\n          onChange: this.handleChange,\n          name: \"startDate\",\n          dateFormat: \"MM/dd/yyyy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.AddNewItem,\n          className: \"btn btn-primary add-btn\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-t-3\",\n          children: toDoItems.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-block\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 67\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-block\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Due Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.dueDate.toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/tommytomaye/Desktop/todo-app/src/todo-list.js"],"names":["React","Component","useState","DatePicker","ToDoList","constructor","props","state","startDate","Date","toDoItems","handleChange","bind","AddNewItem","componentDidMount","items","id","description","dueDate","setState","date","console","log","render","map","item","index","toLocaleDateString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,4CAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;;AAGA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,EADF;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA,UAAMC,KAAK,GAAG,CAAC;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,cAAtB;AAAsCC,MAAAA,OAAO,EAAE,IAAIT,IAAJ;AAA/C,KAAD,EACd;AAAEO,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,iBAAtB;AAAyCC,MAAAA,OAAO,EAAE,IAAIT,IAAJ;AAAlD,KADc,EAEd;AAAEO,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,WAAW,EAAE,iBAAtB;AAAyCC,MAAAA,OAAO,EAAE,IAAIT,IAAJ;AAAlD,KAFc,CAAd;AAGA,SAAKU,QAAL,CAAc;AACVT,MAAAA,SAAS,EAAEK;AADD,KAAd;AAGH;;AAEDJ,EAAAA,YAAY,CAACS,IAAD,EAAO;AACf,SAAKD,QAAL,CAAc;AACVX,MAAAA,SAAS,EAAEY;AADD,KAAd;AAGH;;AAEDP,EAAAA,UAAU,GAAG;AACTQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,SAAvB;AACH;;AAEDe,EAAAA,MAAM,GAAG;AACL,UAAMb,SAAS,GAAG,KAAKH,KAAL,CAAWG,SAA7B;AACA,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AACI,UAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWC,SADzB;AAEI,UAAA,QAAQ,EAAE,KAAKG,YAFnB;AAGI,UAAA,IAAI,EAAC,WAHT;AAII,UAAA,UAAU,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI;AAAQ,UAAA,OAAO,EAAE,KAAKE,UAAtB;AAAkC,UAAA,SAAS,EAAC,yBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBACKH,SAAS,CAACc,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B,gCAAO;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACH;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,oBACkC;AAAA,4BAAOD,IAAI,CAACR;AAAZ;AAAA;AAAA;AAAA;AAAA,wBADlC;AAAA;AAAA;AAAA;AAAA;AAAA,sBADG,eAIH;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,oBAC+B;AAAA,4BAAOQ,IAAI,CAACP,OAAL,CAAaS,kBAAb;AAAP;AAAA;AAAA;AAAA;AAAA,wBAD/B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJG;AAAA,eAAmCD,KAAnC;AAAA;AAAA;AAAA;AAAA,oBAAP;AAQH,WATA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA,oBADJ;AA4BH;;AA9D4B;;AAiEjC,eAAetB,QAAf","sourcesContent":["import React, { Component, useState } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\n\n\nclass ToDoList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            startDate: new Date(),\n            toDoItems: []\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.AddNewItem = this.AddNewItem.bind(this);\n    }\n\n    componentDidMount() {\n        // At this point we will assume that this array is a part of an API response \n        // Let's imagine that we are making a GET call here. \n        const items = [{ id: 0, description: 'Wash the car', dueDate: new Date() },\n        { id: 1, description: 'Clean the house', dueDate: new Date() },\n        { id: 2, description: 'Cook some foods', dueDate: new Date() }]\n        this.setState({\n            toDoItems: items\n        });\n    }\n\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        })\n    }\n\n    AddNewItem() {\n        console.log(this.state.startDate);\n    }\n\n    render() {\n        const toDoItems = this.state.toDoItems;\n        return (\n            <>\n                <div className=\"container p-4 d-flex\">\n                    <input type=\"text\" className=\"form-control\" />\n                    <DatePicker\n                        selected={this.state.startDate}\n                        onChange={this.handleChange}\n                        name=\"startDate\"\n                        dateFormat=\"MM/dd/yyyy\"\n                    />\n                    <button onClick={this.AddNewItem} className=\"btn btn-primary add-btn\">ADD</button>\n                </div>\n                <div className='container'>\n                    <div className='m-t-3'>\n                        {toDoItems.map((item, index) => {\n                            return <div className=\"item-wrapper\" key={index}>\n                                <div className=\"d-block\">\n                                    <strong>Description:</strong> <span>{item.description}</span>\n                                </div>\n                                <div className=\"d-block\">\n                                    <strong>Due Date:</strong> <span>{item.dueDate.toLocaleDateString()}</span>\n                                </div>\n                            </div>\n                        })}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}