{"ast":null,"code":"var _jsxFileName = \"/Users/tommytomaye/Desktop/todo-app/src/todo-list.js\";\nimport React, { Component, useState } from 'react';\nimport ToDoItem from './todo-item.js';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ToDoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemDescription: '',\n      dueDate: new Date(),\n      toDoItems: []\n    };\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleItemChange = this.handleItemChange.bind(this);\n    this.AddNewItem = this.AddNewItem.bind(this);\n  }\n\n  componentDidMount() {\n    // At this point we will assume that this array is a part of an API response \n    // Let's imagine that we are making a GET call here. \n    const items = [{\n      id: 0,\n      description: 'Wash the car',\n      dueDate: new Date()\n    }, {\n      id: 1,\n      description: 'Clean the house',\n      dueDate: new Date()\n    }, {\n      id: 2,\n      description: 'Cook some foods',\n      dueDate: new Date()\n    }];\n    this.setState({\n      toDoItems: items\n    });\n  }\n\n  handleDateChange(date) {\n    this.setState({\n      dueDate: date\n    });\n  }\n\n  handleItemChange(event) {\n    this.setState({\n      itemDescription: event.target.value\n    });\n  }\n\n  AddNewItem() {\n    const newToDOItem = {\n      id: this.state.toDoItems.length,\n      description: this.state.itemDescription,\n      dueDate: this.state.dueDate\n    };\n    const toDoItems = this.state.toDoItems;\n    toDoItems.push(newToDOItem);\n    this.setState({\n      toDoItems: toDoItems\n    });\n    this.setState({\n      itemDescription: ''\n    });\n  }\n\n  deleteItem(index) {\n    let todoItems = this.state.toDoItems.filter((item, indx) => indx !== index);\n    this.setState({\n      toDoItems: todoItems\n    });\n  }\n\n  handleChange(value) {\n    console.log(value);\n  }\n\n  render() {\n    const toDoItems = this.state.toDoItems;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container p-4 d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.handleItemChange,\n          value: this.state.itemDescription,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: this.state.dueDate,\n          onChange: this.handleDateChange,\n          name: \"dueDate\",\n          dateFormat: \"MM/dd/yyyy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.AddNewItem,\n          className: \"btn btn-primary add-btn\",\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-t-3\",\n          children: toDoItems.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(ToDoItem, {\n              item: item,\n              onChange: handleItemChange\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 35\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/tommytomaye/Desktop/todo-app/src/todo-list.js"],"names":["React","Component","useState","ToDoItem","DatePicker","ToDoList","constructor","props","state","itemDescription","dueDate","Date","toDoItems","handleDateChange","bind","handleItemChange","AddNewItem","componentDidMount","items","id","description","setState","date","event","target","value","newToDOItem","length","push","deleteItem","index","todoItems","filter","item","indx","handleChange","console","log","render","map"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport ToDoItem from './todo-item.js';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport DatePicker from 'react-datepicker';\n\n\nclass ToDoList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            itemDescription: '',\n            dueDate: new Date(),\n            toDoItems: []\n        };\n        this.handleDateChange = this.handleDateChange.bind(this);\n        this.handleItemChange = this.handleItemChange.bind(this);\n        this.AddNewItem = this.AddNewItem.bind(this);\n    }\n\n    componentDidMount() {\n        // At this point we will assume that this array is a part of an API response \n        // Let's imagine that we are making a GET call here. \n        const items = [\n            { id: 0, description: 'Wash the car', dueDate: new Date() },\n            { id: 1, description: 'Clean the house', dueDate: new Date() },\n            { id: 2, description: 'Cook some foods', dueDate: new Date() }]\n        this.setState({\n            toDoItems: items\n        });\n    }\n\n    handleDateChange(date) {\n        this.setState({\n            dueDate: date\n        })\n    }\n\n    handleItemChange(event) {\n        this.setState({\n            itemDescription: event.target.value\n        })\n    }\n\n    AddNewItem() {\n        const newToDOItem = {\n            id: this.state.toDoItems.length,\n            description: this.state.itemDescription,\n            dueDate: this.state.dueDate,\n        };\n        const toDoItems = this.state.toDoItems;\n        toDoItems.push(newToDOItem);\n        this.setState({\n            toDoItems: toDoItems\n        })\n        this.setState({\n            itemDescription: ''\n        })\n    }\n\n    deleteItem(index) {\n        let todoItems = this.state.toDoItems.filter((item, indx) => indx !== index);\n        this.setState({ toDoItems : todoItems });\n    }\n\n    handleChange(value) {\n        console.log(value);\n    }\n\n    render() {\n        const toDoItems = this.state.toDoItems;\n        return (\n            <>\n                <div className=\"container p-4 d-flex\">\n                    <input type=\"text\" \n                           onChange={this.handleItemChange} \n                           value={this.state.itemDescription}\n                           className=\"form-control\" />\n                    <DatePicker\n                        selected={this.state.dueDate}\n                        onChange={this.handleDateChange}\n                        name=\"dueDate\"\n                        dateFormat=\"MM/dd/yyyy\"\n                    />\n                    <button onClick={this.AddNewItem} className=\"btn btn-primary add-btn\">ADD</button>\n                </div>\n                <div className='container'>\n                    <div className='m-t-3'>\n                        {toDoItems.map((item, index) => {\n                           return <ToDoItem key={index} item={item} onChange={handleItemChange}/>\n                        })}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}